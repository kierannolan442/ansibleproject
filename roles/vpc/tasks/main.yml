---


- name:               Create the Ansible VPC
  ec2_vpc_net:
    name:             "{{ vpc_name }}"
    cidr_block:       "{{ vpc_cidr_block }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: project_vpc

- name:               VPC Output
  set_fact:
    vpc_id:           "{{ project_vpc.vpc.id }}"

#Subnets - Private and public subnet in Availability Zones A & B
- name:               Create Public Subnet 1
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.1.0/24"
    az:               "{{ aws_region }}a"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Public Subnet 1"
  register: public_subnet_a

- name:               Output public subnet 1
  set_fact:
    public_subnet_a_id: "{{ public_subnet_a.subnet.id }}"

- name:               Create Private Subnet 1
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.2.0/24"
    az:               "{{ aws_region }}a"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Private Subnet 1"
  register: private_subnet_a

- name:               Output private subnet 1
  set_fact:
    private_subnet_a_id: "{{ private_subnet_a.subnet.id }}"

- name:               Create Public Subnet 2
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.11.0/24"
    az:               "{{ aws_region }}b"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Public Subnet 2"
  register: public_subnet_b

- name:               Public subnet 2 output
  set_fact:
    public_subnet_b_id: "{{ public_subnet_b.subnet.id }}"

- name:               Create Private Subnet 2
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "10.0.12.0/24"
    az:               "{{ aws_region }}b"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "Private Subnet 2"
  register: private_subnet_b

- name:               Output private subnet 2
  set_fact:
    private_subnet_b_id: "{{ private_subnet_b.subnet.id }}"


#Creating the internet gateway to allow internet access to the VPC

- name:               Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id:           "{{ vpc_id }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register: vpc_igw

- name:               Set Internet Gateway ID in variable
  set_fact:
    igw_id:           "{{ vpc_igw.gateway_id }}"

- name: Set up public subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "Public"
    subnets:
      - "{{ public_subnet_a_id }}"
      - "{{ public_subnet_b_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"


# This section creates the security groups for public subnets. 
- name: Create Security Group
  ec2_group:
    name: "SSH Access"
    description: "Allowing SSH traffic"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ sg_ip }}/32"
  register: main_sg

- name: Set Main SG ID
  set_fact:
    main_sg_id: "{{ main_sg.group_id }}"

- name: Create Security Group for Private subnets
  ec2_group:
    name: "Private Security Group"
    description: "Private Security Group"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        group_id: "{{ main_sg_id }}"